ls()
dir()
source('C:/Users/A/Dropbox/DBS_Project/Code/AranCode/DBS_Data_Analysis/2D_Graphs.R')
setwd("C:/Users/A/Dropbox/DBS_Project/Code/AranCode/DBS_Data_Analysis/DataCapture/Config1")
source('~/.active-rstudio-document')
plot(sel_df$Y[abs(Potential)>0.02],sel_df$Z[abs(Potential)>0.02],col=sel_df$col[abs(Potential)>0.02])
summary(Potential)
plot(density(all_df$Z))
density(all_df$Z)
hist(all_df$Z)
source('C:/Users/A/Dropbox/DBS_Project/Code/AranCode/DBS_Data_Analysis/Slice_Creator.R')
#Plane choice
tol_loc <-0.1
x_ran<-c(-5,5)
y_ran<-c(-5,5)
z_ran<-c(7,7)
#Fuzzy area selection
sel_loc<- which((all_df$X<=x_ran[2]+tol_loc&all_df$X>=x_ran[1]-tol_loc)&
(all_df$Y<=y_ran[2]+tol_loc&all_df$Y>=y_ran[1]-tol_loc)&
(all_df$Z<=z_ran[2]+tol_loc&all_df$Z>=z_ran[1]-tol_loc))
#Create slice frame and flatten one coord 3D->2D
sel_df<-all_df[sel_loc,]
attach(sel_df)
sel_df<-data.frame(Y,Z,Potential)
#
rbPal <- colorRampPalette(c('red','orange','white'),bias=2)
sel_df$col<-rbPal(100)[as.numeric(cut(sel_df$Potential,breaks = 100))]
#Example graphs
plot(sel_df$Y[Potential>0.3],sel_df$Z[Potential>0.3],col=sel_df$col[Potential>0.3])
plot(Y,Z,col=sel_df$col)
plot(sel_df$Y[abs(Potential)>0.02],sel_df$Z[abs(Potential)>0.02],col=sel_df$col[abs(Potential)>0.02])
x_ran<-c(-5,5)
y_ran<-c(-5,5)
z_ran<-c(4,6)
#Fuzzy area selection
sel_loc<- which((all_df$X<=x_ran[2]+tol_loc&all_df$X>=x_ran[1]-tol_loc)&
(all_df$Y<=y_ran[2]+tol_loc&all_df$Y>=y_ran[1]-tol_loc)&
(all_df$Z<=z_ran[2]+tol_loc&all_df$Z>=z_ran[1]-tol_loc))
#Create slice frame and flatten one coord 3D->2D
sel_df<-all_df[sel_loc,]
attach(sel_df)
sel_df<-data.frame(Y,Z,Potential)
#
rbPal <- colorRampPalette(c('red','orange','white'),bias=2)
sel_df$col<-rbPal(100)[as.numeric(cut(sel_df$Potential,breaks = 100))]
#Example graphs
plot(sel_df$Y[Potential>0.3],sel_df$Z[Potential>0.3],col=sel_df$col[Potential>0.3])
plot(Y,Z,col=sel_df$col)
plot(sel_df$Y[abs(Potential)>0.02],sel_df$Z[abs(Potential)>0.02],col=sel_df$col[abs(Potential)>0.02])
plot(sel_df$Z[abs(Potential)>0.02],sel_df$Y[abs(Potential)>0.02],col=sel_df$col[abs(Potential)>0.02])
windows()
ls()
source('C:/Users/A/Dropbox/DBS_Project/Code/AranCode/DBS_Data_Analysis/Clean/Grid_Smoothing.R')
source('~/.active-rstudio-document')
big_grid[1:10,1:10,1:10]
big_grid[1:10,1:10]
big_grid[10:50,10:50]
big_grid!=0
sum(big_grid!=0)
sum(big_grid==0)
source('C:/Users/A/Dropbox/DBS_Project/Code/AranCode/DBS_Data_Analysis/Clean/Grid_Smoothing.R')
plot(big_grid)
summary(big_grid)
plot(Y,Z,col=sel_df$col)
sel_df$col<-rbPal(100)[as.numeric(cut(abs(sel_df$Potential),breaks = 100))]
plot(Y,Z,col=sel_df$col)
help(plot)
plot(Y,Z,col=sel_df$col,type="s")
plot(Y,Z,col=sel_df$col,type="l")
plot(Y,Z,col=sel_df$col,type="p")
plot(Y,Z,col=sel_df$col,type="o")
smoothScatter(Y,Z)
help(smoothScatter)
smoothScatter(Y,Z,bandwidth=10)
smoothScatter(Y,Z,bandwidth=50)
smoothScatter(Y,Z,bandwidth=100)
smoothScatter(Y,Z,bandwidth=1000)
smoothScatter(Y,Z,colramp=colorRampPalette(c("red","white")))
smoothScatter(Y,Z,nbin=10,colramp=colorRampPalette(c("red","orange","white")))
smoothScatter(Y,Z,nbin=100,colramp=colorRampPalette(c("red","orange","white")))
smoothScatter(Y,Z,nbin=1000,colramp=colorRampPalette(c("red","orange","white")))
cond=Potential>0.5
smoothScatter(Y[cond],Z[cond],nbin=1000,colramp=colorRampPalette(c("red","orange","white")))
cond=Potential>0.2
smoothScatter(Y[cond],Z[cond],nbin=1000,colramp=colorRampPalette(c("red","orange","white")))
cond=Potential>0.2
smoothScatter(Y[cond],Z[cond],nbin=1000,colramp=colorRampPalette(c("red","orange","white")))
cond
sum(cond_
)
sum(cond)
cond=abs(Potential)>0.02
smoothScatter(Y[cond],Z[cond],nbin=1000,colramp=colorRampPalette(c("red","orange","white")))
plot(all_df(all_df$Potential>0.5))
plot(all_df[all_df$Potential>0.5])
plot(all_df$Y[all_df$Potential>0.5],all_df$Z[all_df$Potential>0.5]))
plot(all_df$Y[all_df$Potential>0.5],all_df$Z[all_df$Potential>0.5])
plot(all_df$Y[abs(all_df$Potential)>0.5],all_df$Z[abs(all_df$Potential)>0.5])
all_df$Z[all_df$Potential>0.5])
all_df$Z[all_df$Potential>0.5]
mean(all_df$Z[all_df$Potential>0.5])
#Plane choice
tol_loc <-0.1
x_ran<-c(-5,5)
y_ran<-c(-5,5)
z_ran<-c(0,1)
#Fuzzy area selection
sel_loc<- which((all_df$X<=x_ran[2]+tol_loc&all_df$X>=x_ran[1]-tol_loc)&
(all_df$Y<=y_ran[2]+tol_loc&all_df$Y>=y_ran[1]-tol_loc)&
(all_df$Z<=z_ran[2]+tol_loc&all_df$Z>=z_ran[1]-tol_loc))
#Create slice frame and flatten one coord 3D->2D
sel_df<-all_df[sel_loc,]
attach(sel_df)
sel_df<-data.frame(Y,Z,Potential)
#
rbPal <- colorRampPalette(c('red','orange','white'),bias=2)
sel_df$col<-rbPal(100)[as.numeric(cut(abs(sel_df$Potential),breaks = 100))]
cond=abs(Potential)>0.5
smoothScatter(Y[cond],Z[cond],nbin=100,colramp=colorRampPalette(c("red","orange","white")))
cond=abs(Potential)>0.5
smoothScatter(Y[cond],Z[cond],nbin=1000,colramp=colorRampPalette(c("red","orange","white")))
cond=abs(Potential)>0.5
smoothScatter(Y[cond],Z[cond],bandwidth=70,nbin=100,colramp=colorRampPalette(c("red","orange","white")))
cond=abs(Potential)>0.5
smoothScatter(Y[cond],Z[cond],bandwidth=150,nbin=100,colramp=colorRampPalette(c("red","orange","white")))
cond=abs(Potential)>0.5
smoothScatter(Y[cond],Z[cond],bandwidth=1000,nbin=100,colramp=colorRampPalette(c("red","orange","white")))
cond=abs(Potential)>0.5
smoothScatter(Y[cond],Z[cond],bandwidth=10,nbin=100,colramp=colorRampPalette(c("red","orange","white")))
cond=abs(Potential)>0.5
smoothScatter(Y[cond],Z[cond],nbin=100,colramp=colorRampPalette(c("red","orange","white")))
cond=abs(Potential)>0.05
smoothScatter(Y[cond],Z[cond],nbin=100,colramp=colorRampPalette(c("red","orange","white")))
cond=abs(Potential)>0.2
smoothScatter(Y[cond],Z[cond],nbin=100,colramp=colorRampPalette(c("red","orange","white")))
cond=abs(Potential)>0.3
smoothScatter(Y[cond],Z[cond],nbin=100,colramp=colorRampPalette(c("red","orange","white")))
cond=abs(Potential)>0.1
smoothScatter(Y[cond],Z[cond],nbin=100,colramp=colorRampPalette(c("red","orange","white")))
#Plane choice
tol_loc <-0.1
x_ran<-c(1,1)
y_ran<-c(-5,5)
z_ran<-c(-5,5)
#Fuzzy area selection
sel_loc<- which((all_df$X<=x_ran[2]+tol_loc&all_df$X>=x_ran[1]-tol_loc)&
(all_df$Y<=y_ran[2]+tol_loc&all_df$Y>=y_ran[1]-tol_loc)&
(all_df$Z<=z_ran[2]+tol_loc&all_df$Z>=z_ran[1]-tol_loc))
#Create slice frame and flatten one coord 3D->2D
sel_df<-all_df[sel_loc,]
attach(sel_df)
sel_df<-data.frame(Y,Z,Potential)
#
rbPal <- colorRampPalette(c('red','orange','white'),bias=2)
sel_df$col<-rbPal(100)[as.numeric(cut(abs(sel_df$Potential),breaks = 100))]
#Example graphs
plot(all_df$Y[abs(all_df$Potential)>0.5],all_df$Z[abs(all_df$Potential)>0.5])
plot(sel_df$Y[Potential>0.3],sel_df$Z[Potential>0.3],col=sel_df$col[Potential>0.3])
plot(Y,Z,col=sel_df$col)
plot(sel_df$Y[abs(Potential)>0.02],sel_df$Z[abs(Potential)>0.02],col=sel_df$col[abs(Potential)>0.02])
smoothScatter(Y,Z,nbin=1000,colramp=colorRampPalette(c("red","orange","white")))
cond=abs(Potential)>0.5
smoothScatter(Y[cond],Z[cond],nbin=1000,colramp=colorRampPalette(c("red","orange","white")))
cond=abs(Potential)>0.5
smoothScatter(Y[cond],Z[cond],nbin=1000,colramp=colorRampPalette(c("red","orange","white")))
cond=abs(Potential)>0.2
smoothScatter(Y[cond],Z[cond],nbin=1000,colramp=colorRampPalette(c("red","orange","white")))
cond=abs(Potential)>0.2
smoothScatter(Y[cond],Z[cond],nbin=100,colramp=colorRampPalette(c("red","orange","white")))
cond=abs(Potential)>0.2
smoothScatter(Y[cond],Z[cond],,bandwidth=70,nbin=100,colramp=colorRampPalette(c("red","orange","white")))
cond=abs(Potential)>0.2
smoothScatter(Y[cond],Z[cond],bandwidth=35,nbin=100,colramp=colorRampPalette(c("red","orange","white")))
cond=abs(Potential)>0.2
smoothScatter(Y[cond],Z[cond],bandwidth=3000,nbin=100,colramp=colorRampPalette(c("red","orange","white")))
cond=abs(Potential)>0.2
smoothScatter(Y[cond],Z[cond],nbin=100,colramp=colorRampPalette(c("red","orange","white")))
attach(all_df)
cond=abs(Potential)>0.2
smoothScatter(Y[cond],Z[cond],nbin=100,colramp=colorRampPalette(c("red","orange","white")))
sum(cond)
cond=abs(Potential)>0.5
smoothScatter(Y[cond],Z[cond],nbin=100,colramp=colorRampPalette(c("red","orange","white")))
cond=abs(Potential)>0.5
smoothScatter(Y[cond],Z[cond],nbin=1000,colramp=colorRampPalette(c("red","orange","white")))
cond=abs(Potential)>0.5
smoothScatter(Y[cond],Z[cond],bandwidth=70,nbin=1000,colramp=colorRampPalette(c("red","orange","white")))
cond=abs(Potential)>0.5
smoothScatter(Y[cond],Z[cond],bandwidth=0.5,nbin=1000,colramp=colorRampPalette(c("red","orange","white")))
cond=abs(Potential)>0.5
smoothScatter(Y[cond],Z[cond],bandwidth=5,nbin=1000,colramp=colorRampPalette(c("red","orange","white")))
cond=abs(Potential)>0.5
smoothScatter(Y[cond],Z[cond],bandwidth=0.01,nbin=1000,colramp=colorRampPalette(c("red","orange","white")))
cond=abs(Potential)>0.5
smoothScatter(Y[cond],Z[cond],bandwidth=0.1,nbin=1000,colramp=colorRampPalette(c("red","orange","white")))
par(bg="")
smoothScatter(Y[cond],Z[cond],nbin=1000,colramp=colorRampPalette(c("red","orange","white")))
